# Maintainer: Alexey Pavlov <alexpux@gmail.com>

pkgname=subversion
pkgver=1.14.2
pkgrel=1
pkgdesc="A Modern Concurrent Version Control System"
arch=('i686' 'x86_64')
url="https://subversion.apache.org/"
license=('APACHE')
groups=('VCS')
depends=('libsqlite' 'file' 'liblz4' 'libserf' 'libsasl' 'libexpat')
makedepends=('python' 'python-py3c' 'perl' 'swig' 'ruby' 'liblz4-devel' 'libsqlite-devel' 'libserf-devel' 'libsasl-devel' 'gmp-devel')
optdepends=('bash-completion: for svn bash completion'
            'python: for some hook scripts'
            'ruby: for some hook scripts')
provides=('svn')
options=('!makeflags' '!libtool' '!emptydirs')
noextract=("subversion-${pkgver}.tar.bz2")
source=(https://archive.apache.org/dist/subversion/subversion-${pkgver}.tar.bz2{,.asc}
        svnclean
        0001-Create-directories-in-build-tree.patch
        0002-Fix-linking-for-Cygwin.patch
        0003-Fix-linking-for-perl.patch
        0004-Fix-a-switch-test-that-expects-to-an-error-due-to-re.patch
        0005-Use-WIN32-retry-loop-on-Cygwin-too.patch
        0006-Use-binary-mode-for-svnadmin-dump-load.patch
        0007-Don-t-support-DOS-paths-for-Cygwin.patch
        0008-Fix-ruby-tests.patch
        0009-Support-wincrypt-for-password-encryption-on-Cygwin.patch
        0010-Install-perl-modules-into-vendors.patch
        0011-XFAIL-some-case-sensitive-rename-and-move-tests.patch
        0012-Fix-svnlook_tests.py-so-it-sets-PATH-in-the-python-h.patch
        0013-Fix-DSO-open-specifically-for-auth-modules-like-GNOM.patch
        0014-Fix-svnauthz_tests.py-by-adding-usr-bin-to-PATH.patch
        0015-Mark-basic_test.py-rm_missing_with_case_clashing_ond.patch
        0016-Support-swig3.patch
        0017-Fix-serf-config.patch
        0018-Remove-contrib.patch
        0019-subversion-1.9.1-msys2.patch
        0020-remove-checking-symlink.patch
        0021-90-use-copy-instead-symlink.patch)
sha256sums=('c9130e8d0b75728a66f0e7038fc77052e671830d785b5616aad53b4810d3cc28'
            'SKIP'
            'b09dd041aba0078c8d50df130ef2f96c3ef8486279a620532fef4fe48ef9961e'
            '7268e997ada7b9d07415dfc3f40c60f44983e4be53c8ce296f0b3988588ba5e2'
            '6e2e73995d7274f88b75d46544af3645e4d3d2fb799f897262d3251fe1765225'
            '0749620a73602f6edbdea58f48b6baaf10731d1ce3eff8142131a262a39d3e4b'
            'b86fd2d2ba0109a4704aec7ffaf3daa2392341c94f95b3dc61bd3c139650cefe'
            '2cd0ca2ac9655527f676c16e7d6a0cc54372da55113a721c3604574653eed134'
            '7da11c7f617a8d98357606dcc2828d8465d1d2910646708306273547f5161bfd'
            'd993b8d871eb870dfc2a11fa84001c8b82119739c9aef8df922f65f99ae74061'
            '2d6fbeccc2f956d3b54f0896994afcaabde055e1cf885ba0e8cdb88c086452ca'
            '4001484490c512bb72584dd1b3e886bf4485f2e079cf0b11df3c2237ad7a07e9'
            '11d692f2c07a42e7d068a329cf9760f12ba512c842dd1f146ee7f87bab177b48'
            'd3a35ae3382b3963db69f14edac16b453aea03ddb26d3afd82d0f1907a4ccbaf'
            '199588057644a9325bb9405dbaee1e0f109bea79d3a141a431bad65a28385e81'
            '6de46e5d79b33f56a7f9404a6a15cd028cd092e2c26f06d63d264946c3225a42'
            '3155575bd53c7d552b04bb976191d85a5acd740bd44eb479e2be37fe4f759143'
            '4c3b29c8fead275310b097dfbf081b04c7a8b4f24287a20296c8525e7972d691'
            '7f6caba90e204db51a6c00424956cd89c495844f539ed7cd4306fa731d14fd4a'
            'ad49bf1c4e8aca0e8f8245fced060e0e3facffc01b7adb8238799adb785ac122'
            '7306626d686c079a0e579712e378ace2308f71f0f9a5c0ecc2ded33734dfe432'
            '664f1fc2bbf2a5f043777dae6cc1fb43c079460656c1ad4a4221f5213a812e16'
            '0a3b3208bec9b1ddd4936d9403e16f9de3c2ae7887ef15899aee635ab04fae45'
            '414b004e442e1daabb6a5e9b469e21ba8175f498c5256163b1e34c07aa0a4841')
validpgpkeys=('91BFBF4D6956BD5DF7B72D23DFE691AE331BA3DB'
              'BA3C15B1337CF0FB222BD41A1BCA6586A347943F'
              'EC25FCC105618D04ADB43429C4416167349A3BCB')

case "$(uname -m)" in
i686)
# py3c was not built in 32-bit MSYS2; In fact, all 32-bit development of MSYS2 stopped.
# Just skip the Python bindings; Git for Windows does not need them.
makedepends=('perl' 'swig' 'ruby' 'liblz4-devel' 'libsqlite-devel' 'libserf-devel' 'libsasl-devel' 'gmp-devel')
PYTHON_SITELIB=
;;
*)
PYTHON_SITELIB=$(/usr/bin/python -c 'from distutils.sysconfig import * ; print(get_python_lib(0,0));')
;;
esac

prepare() {
  cd ${startdir}/
  [[ -d ${srcdir}/${pkgname}-${pkgver} ]] && rm -rf -d ${srcdir}/${pkgname}-${pkgver}
  tar -xjvf ${SRCDEST}/${pkgname}-${pkgver}.tar.bz2 -C ${srcdir} || true

  cd ${srcdir}/${pkgname}-${pkgver}

  sed -i 's|except IOError,|except IOError as|' build/getversion.py

  patch -p1 -i ${srcdir}/0001-Create-directories-in-build-tree.patch
  patch -p1 -i ${srcdir}/0002-Fix-linking-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0003-Fix-linking-for-perl.patch
  patch -p1 -i ${srcdir}/0004-Fix-a-switch-test-that-expects-to-an-error-due-to-re.patch
  patch -p1 -i ${srcdir}/0005-Use-WIN32-retry-loop-on-Cygwin-too.patch
  patch -p1 -i ${srcdir}/0006-Use-binary-mode-for-svnadmin-dump-load.patch
  patch -p1 -i ${srcdir}/0007-Don-t-support-DOS-paths-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0008-Fix-ruby-tests.patch
  patch -p1 -i ${srcdir}/0009-Support-wincrypt-for-password-encryption-on-Cygwin.patch
  patch -p1 -i ${srcdir}/0010-Install-perl-modules-into-vendors.patch
  patch -p1 -i ${srcdir}/0011-XFAIL-some-case-sensitive-rename-and-move-tests.patch
  patch -p1 -i ${srcdir}/0012-Fix-svnlook_tests.py-so-it-sets-PATH-in-the-python-h.patch
  patch -p1 -i ${srcdir}/0013-Fix-DSO-open-specifically-for-auth-modules-like-GNOM.patch
  patch -p1 -i ${srcdir}/0014-Fix-svnauthz_tests.py-by-adding-usr-bin-to-PATH.patch
  patch -p1 -i ${srcdir}/0015-Mark-basic_test.py-rm_missing_with_case_clashing_ond.patch
  patch -p1 -i ${srcdir}/0016-Support-swig3.patch
  patch -p1 -i ${srcdir}/0017-Fix-serf-config.patch
  patch -p1 -i ${srcdir}/0018-Remove-contrib.patch
  patch -p1 -i ${srcdir}/0019-subversion-1.9.1-msys2.patch
  patch -p1 -i ${srcdir}/0020-remove-checking-symlink.patch
  patch -p1 -i ${srcdir}/0021-90-use-copy-instead-symlink.patch

  PYTHON=/usr/bin/python2 ./autogen.sh
  # Hack to allow `libsvn_test-1` to be built
  sed 's/ -o libsvn_test-1.la / -no-undefined&/' -i build-outputs.mk
}

build() {
  export lt_cv_deplibs_check_method='pass_all'
  cd ${pkgname}-${pkgver}
  export PYTHON=/usr/bin/python
  ./configure --prefix=/usr \
      --build=${CHOST} \
      --with-apr=/usr \
      --with-apr-util=/usr \
      --with-zlib=/usr \
      --with-serf=/usr \
      --with-sqlite=/usr \
      --without-apxs \
      --without-gnome-keyring \
      --with-utf8proc=internal \
      --enable-shared --disable-static \
      --with-ruby-sitedir=/usr/lib/ruby/vendor_ruby \
      --disable-mod-activation \
      --enable-disallowing-of-undefined-references \
      --enable-local-library-preloading

  test -n "$PYTHON_SITELIB" || {
    sed -i 's/\(swig:.*\) [^ ]*-py/\1/' Makefile
    sed -i 's/\(swig:.*\) [^ ]*-py/\1/' build-outputs.mk
  }

  make clean-swig
  make autogen-swig
  make all

  plain "Compiling swig bindings: ruby"
  make swig-rb

  plain "Compiling swig bindings: perl"
  make swig-pl

  test -z "$PYTHON_SITELIB" || {
  plain "Compiling swig bindings: python"
  make swig-py swig_pydir=${PYTHON_SITELIB}/libsvn swig_pydir_extra=${PYTHON_SITELIB}/svn
  }
}

#check() {
#   cd ${pkgname}-${pkgver}
#   export LANG=C LC_ALL=C
#   make check check-swig-pl check-swig-py check-swig-rb CLEANUP=yes # check-javahl
#}

package() {
  cd ${pkgname}-${pkgver}

  make -j1 DESTDIR="${pkgdir}" INSTALLDIRS=vendor \
    swig_pydir=${PYTHON_SITELIB}/libsvn \
    swig_pydir_extra=${PYTHON_SITELIB}/svn \
    install install-tools $(test -z "$PYTHON_SITELIB" || echo install-swig-py) install-swig-pl install-swig-rb

  install -dm755 "${pkgdir}"/usr/share/subversion
  cp -a tools/hook-scripts "${pkgdir}"/usr/share/subversion/
  rm "${pkgdir}"/usr/share/subversion/hook-scripts/*.in

  ## svnclean
  install -Dm 755 ${srcdir}/svnclean "${pkgdir}"/usr/bin/svnclean

  install -Dm 644 tools/client-side/bash_completion \
     "${pkgdir}"/usr/share/bash-completion/completions/subversion
  for i in svn svnadmin svndumpfilter svnlook svnsync svnversion; do
      ln -sf subversion "${pkgdir}"/usr/share/bash-completion/completions/${i}
  done

  # Remove illegal files
  find ${pkgdir}/usr -type f -name "*::*" | xargs rm -f

  # fix permissons
  find ${pkgdir}/usr -type f \( -name *.dll -o -name *.exe \) | xargs chmod 0755
}
