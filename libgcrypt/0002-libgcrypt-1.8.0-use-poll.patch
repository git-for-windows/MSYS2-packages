From 562606ffb81143c575131bc25b3b392a9cd16394 Mon Sep 17 00:00:00 2001
From: Alexey Pavlov <alexpux@gmail.com>
Date: Fri, 22 Jun 2018 09:33:00 +0300
Subject: [PATCH 2/3] libgcrypt-1.8.0-use-poll

---
 random/rndlinux.c | 51 +++++++++++++++++++----------------------------
 1 file changed, 20 insertions(+), 31 deletions(-)

diff --git a/random/rndlinux.c b/random/rndlinux.c
index c20c5d4c..443ba1ef 100644
--- a/random/rndlinux.c
+++ b/random/rndlinux.c
@@ -32,6 +32,7 @@
 #include <string.h>
 #include <unistd.h>
 #include <fcntl.h>
+#include <poll.h>
 #if defined(__APPLE__) && defined(__MACH__)
 #include <Availability.h>
 #ifdef __MAC_10_11
@@ -249,9 +250,8 @@ _gcry_rndlinux_gather_random (void (*add)(const void*, size_t,
                  return with something we will actually use 100ms. */
   while (length)
     {
-      fd_set rfds;
-      struct timeval tv;
       int rc;
+      struct pollfd pfd;
 
       /* If we have a modern operating system, we first try to use the new
        * getentropy function.  That call guarantees that the kernel's
@@ -310,36 +310,25 @@ _gcry_rndlinux_gather_random (void (*add)(const void*, size_t,
           any_need_entropy = 1;
         }
 
-      /* If the system has no limit on the number of file descriptors
-         and we encounter an fd which is larger than the fd_set size,
-         we don't use the select at all.  The select code is only used
-         to emit progress messages.  A better solution would be to
-         fall back to poll() if available.  */
-#ifdef FD_SETSIZE
-      if (fd < FD_SETSIZE)
-#endif
+      pfd.fd = fd;
+      pfd.events = POLLIN;
+
+      _gcry_pre_syscall ();
+      rc = poll(&pfd, 1, delay);
+      _gcry_post_syscall ();
+      if (!rc)
         {
-          FD_ZERO(&rfds);
-          FD_SET(fd, &rfds);
-          tv.tv_sec = delay;
-          tv.tv_usec = delay? 0 : 100000;
-          _gcry_pre_syscall ();
-          rc = select (fd+1, &rfds, NULL, NULL, &tv);
-          _gcry_post_syscall ();
-          if (!rc)
-            {
-              any_need_entropy = 1;
-              delay = 3; /* Use 3 seconds henceforth.  */
-              continue;
-            }
-          else if( rc == -1 )
-            {
-              log_error ("select() error: %s\n", strerror(errno));
-              if (!delay)
-                delay = 1; /* Use 1 second if we encounter an error before
-                              we have ever blocked.  */
-              continue;
-            }
+          any_need_entropy = 1;
+          delay = 3000; /* Use 3 seconds henceforth.  */
+          continue;
+        }
+        else if( rc == -1 )
+        {
+          log_error ("poll() error: %s\n", strerror(errno));
+          if (!delay)
+            delay = 1000; /* Use 1 second if we encounter an error before
+                          we have ever blocked.  */
+          continue;
         }
 
       do
